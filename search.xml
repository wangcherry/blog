<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>表格固定表头和固定列</title>
      <link href="/blog/2019/01/12/%E8%A1%A8%E6%A0%BC%E5%9B%BA%E5%AE%9A%E8%A1%A8%E5%A4%B4%E5%92%8C%E5%9B%BA%E5%AE%9A%E5%88%97/"/>
      <url>/blog/2019/01/12/%E8%A1%A8%E6%A0%BC%E5%9B%BA%E5%AE%9A%E8%A1%A8%E5%A4%B4%E5%92%8C%E5%9B%BA%E5%AE%9A%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>平时业务中经常会碰到固定表头或者固定列的需求，对于只固定表头或者固定列的情况可以使用两个表格，利用css实现。但是对于需要同时固定表头和列的情况，就需要四个表格完成样式，js监听滚动事件。如果表格数据比较多，样式复杂，性能就会受影响，效果不是很理想。那么，我们还有其他方式实现同时固定表头和列吗？</p><p>答案是，yes</p><p>接下来给大家介绍下 position: sticky; 这个属性</p><h2 id="position属性"><a href="#position属性" class="headerlink" title="position属性"></a>position属性</h2><p>CSS position属性用于指定一个元素在文档中的定位方式。top，right，bottom 和 left 属性则决定了该元素的最终位置。<br>position 常用值有：</p><ul><li>absolute（生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。）</li><li>relative（生成相对定位的元素，相对于其正常位置进行定位。）</li><li>fixed（生成固定定位的元素，相对于浏览器窗口进行定位。）</li><li>sticky（生成粘性定位元素）</li></ul><p>下面我们主要介绍的是粘性定位</p><h2 id="粘性定位"><a href="#粘性定位" class="headerlink" title="粘性定位"></a>粘性定位</h2><p>属性为 position: sticky 的元素是粘性定位元素。</p><p>粘性定位可以被认为是相对定位和固定定位的混合。元素在跨越特定阈值前为相对定位，之后为固定定位。举个栗子：</p><p>git效果图：</p><p><img src="https://yanxuan.nosdn.127.net/256ba3567699a9e07d40209c60e7a25c.gif" alt=""></p><p>dt元素在到达顶部之前为相对定位，当元素的top为0之后，就固定在顶部。</p><p><a href="https://codepen.io/wangcherry/pen/rooJEV" target="_blank" rel="noopener">查看源码</a></p><h2 id="position-sticky-实现表格固定表头和列"><a href="#position-sticky-实现表格固定表头和列" class="headerlink" title="position: sticky; 实现表格固定表头和列"></a>position: sticky; 实现表格固定表头和列</h2><p>一个表格轻松搞定表头和列固定</p><p>gif效果图：</p><p><img src="https://yanxuan.nosdn.127.net/190e03363b77c9c9a8f5c91169b70fa0.gif" alt=""></p><p><a href="https://codepen.io/wangcherry/pen/PXXRqd" target="_blank" rel="noopener">查看源码</a></p><p>需要注意：</p><ul><li>该粘性定位元素并不脱离文档流，仍然保留元素原本在文档流中的位置。</li><li>当元素在容器中被滚动超过指定的偏移值时，元素在容器内固定在指定位置。亦即如果你设置了top: 50px，那么在sticky元素到达距离相对定位的元素顶部50px的位置时固定，不再向上移动。</li><li>元素固定的相对偏移是相对于离它最近的具有滚动框的祖先元素，如果祖先元素都不可以滚动，那么是相对于viewport来计算元素的偏移量</li><li>须指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。并且 top 和 bottom 同时设置时，top 生效的优先级高，left 和 right 同时设置时，left 的优先级高。</li></ul><p>兼容性：</p><ul><li>这个属性的兼容性还不是很好，目前仍是一个试验性的属性，并不是W3C推荐的标准。<a href="https://caniuse.com/#search=position%3Asticky" target="_blank" rel="noopener">查看兼容性</a><br><img src="https://yanxuan.nosdn.127.net/e68f0b5f9ed7b0932320e516d4b8d9c9.png" alt=""></li></ul><h2 id="js实现表格固定表头和列"><a href="#js实现表格固定表头和列" class="headerlink" title="js实现表格固定表头和列"></a>js实现表格固定表头和列</h2><p>对兼容性要求高时可以考虑用js监听滚动实现固定</p><p>gif效果图：</p><p><img src="https://yanxuan.nosdn.127.net/83e278cbe3a7df608d7795869b941499.gif" alt=""></p><p><a href="https://codepen.io/wangcherry/pen/PXXRZd" target="_blank" rel="noopener">查看源码</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文件下载和页面打印</title>
      <link href="/blog/2018/12/27/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%92%8C%E9%A1%B5%E9%9D%A2%E6%89%93%E5%8D%B0/"/>
      <url>/blog/2018/12/27/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%92%8C%E9%A1%B5%E9%9D%A2%E6%89%93%E5%8D%B0/</url>
      
        <content type="html"><![CDATA[<p>文件下载和页面打印在业务中有很多使用场景，它们的本质是一样的，都是向后端发一个请求，然后后端返回一个文件。浏览器将文件下载下来，（打印的情况，就是返回html文件，文件加载完之后调浏览器的打印）。</p><p>下面主要从文件下载讨论：</p><h2 id="使用-a-标签"><a href="#使用-a-标签" class="headerlink" title="使用 a 标签"></a>使用 a 标签</h2><p>最基础的用法，加 download 属性，浏览器下载该文件。<br>缺点：</p><ul><li>不能使用post方法</li><li>不能在启动下载时禁用按钮、下载完毕启用按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xhr/doc/ts实践总结&amp;ts解析.pptx"</span> <span class="attr">download</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h6 id="关于-download-重命名"><a href="#关于-download-重命名" class="headerlink" title="关于 download 重命名"></a>关于 download 重命名</h6><ul><li>download 的值可作为文件的名称</li><li>后端如果对文件命名，那么会使用后端的命名</li><li>在后端没有命名时，以 download 的值为文件名称</li><li>都没命名时，或者 download 值设置为空时，下载的文件用文件本身的名称</li></ul><h2 id="window-open"><a href="#window-open" class="headerlink" title="window.open"></a>window.open</h2><p>缺点：</p><ul><li>异步回调函数里调 window.open 会被浏览器拦截<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> windowOpen = <span class="function">(<span class="params">url: <span class="built_in">string</span>, target: <span class="built_in">string</span> = '_blank'</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.open(url, target);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="动态创建-a-标签"><a href="#动态创建-a-标签" class="headerlink" title="动态创建 a 标签"></a>动态创建 a 标签</h2><p>如果在某些业务操作之后再下载的情况，就可以动态创建一个 a 标签。<br><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载方法</span></span><br><span class="line"><span class="comment"> * @param url</span></span><br><span class="line"><span class="comment"> * @param target</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> download = <span class="function">(<span class="params">url: <span class="built_in">string</span>, target: <span class="built_in">string</span> = '_blank'</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> a = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">    a.id = <span class="string">`download<span class="subst">$&#123;Date.now()&#125;</span>`</span>;</span><br><span class="line">    a.href = url;</span><br><span class="line">    a.target = target;</span><br><span class="line">    a.download = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">const</span> body = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>];</span><br><span class="line">    body.appendChild(a);</span><br><span class="line">    a.click();</span><br><span class="line">    body.removeChild(a);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="iframe-form"><a href="#iframe-form" class="headerlink" title="iframe + form"></a>iframe + form</h2><ul><li>不管是 a 标签还是 window.open ，在异步回调里都可能会被浏览器拦截（具体看浏览器，因为不是用户发起的页面跳转，有些浏览器会认为不安全）</li><li>或者是下载请求需要带复杂对象参数，需要用 post 方法，可以使用 iframe + form 利用表单的形式带参数。<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载方法</span></span><br><span class="line"><span class="comment"> * @param url</span></span><br><span class="line"><span class="comment"> * @param target</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> download = <span class="function">(<span class="params">url: <span class="built_in">string</span>, params: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> body = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">const</span> oldIframe = <span class="built_in">document</span>.getElementById(<span class="string">'perfectIframe'</span>);</span><br><span class="line">    <span class="keyword">const</span> oldForm = <span class="built_in">document</span>.getElementById(<span class="string">'perfectForm'</span>);</span><br><span class="line">    <span class="keyword">const</span> oldInput = <span class="built_in">document</span>.getElementById(<span class="string">'perfectInput'</span>);</span><br><span class="line">    <span class="keyword">if</span> (oldIframe &amp;&amp; oldForm &amp;&amp; oldInput) &#123;</span><br><span class="line">        oldForm.setAttribute(<span class="string">'action'</span>, url);</span><br><span class="line">        oldInput.setAttribute(<span class="string">'value'</span>, <span class="built_in">JSON</span>.stringify(params));</span><br><span class="line">        <span class="built_in">document</span>.forms[<span class="string">'perfectForm'</span>].submit();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span><br><span class="line">        iframe.setAttribute(<span class="string">'name'</span>, <span class="string">'form_target'</span>);</span><br><span class="line">        iframe.setAttribute(<span class="string">'id'</span>, <span class="string">'perfectIframe'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> form = <span class="built_in">document</span>.createElement(<span class="string">'form'</span>);</span><br><span class="line">        form.setAttribute(<span class="string">'id'</span>, <span class="string">'perfectForm'</span>);</span><br><span class="line">        form.setAttribute(<span class="string">'name'</span>, <span class="string">'perfectForm'</span>);</span><br><span class="line">        form.setAttribute(<span class="string">'method'</span>, <span class="string">'post'</span>);</span><br><span class="line">        form.setAttribute(<span class="string">'action'</span>, url);</span><br><span class="line">        form.setAttribute(<span class="string">'target'</span>, <span class="string">'form_target'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> hiddenField = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>);</span><br><span class="line">        hiddenField.setAttribute(<span class="string">'id'</span>, <span class="string">'perfectInput'</span>);</span><br><span class="line">        hiddenField.setAttribute(<span class="string">'type'</span>, <span class="string">'hidden'</span>);</span><br><span class="line">        hiddenField.setAttribute(<span class="string">'name'</span>, <span class="string">'value'</span>);</span><br><span class="line">        hiddenField.setAttribute(<span class="string">'value'</span>, <span class="built_in">JSON</span>.stringify(params));</span><br><span class="line"></span><br><span class="line">        form.appendChild(hiddenField);</span><br><span class="line">        body.appendChild(form);</span><br><span class="line">        body.appendChild(iframe);</span><br><span class="line">        form.submit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="DEMO源码"><a href="#DEMO源码" class="headerlink" title="DEMO源码"></a>DEMO源码</h3><p>html：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1：点击 下载 来下载文件：<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>a 标签 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xhr/doc/test.pptx"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>window.open 下载 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"windowOpen('/xhr/doc/test.pptx');"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>动态创建 a 标签 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"createAEle('/xhr/doc/test.pptx');"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>异步请求回调里下载 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"downloadAfterAsync();"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>ajax回调里下载 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"downloadAfterAjax();"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>form 表单提交 <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"formDownload('/xhr/doc/test.pptx',&#123;a:1,b:2&#125;);"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function windowOpen(url) &#123;</span></span><br><span class="line"><span class="undefined">        window.open(url,'_blank');</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    function createAEle(url, target) &#123;</span></span><br><span class="line"><span class="undefined">        const a = document.createElement('a');</span></span><br><span class="line"><span class="undefined">        a.id = `download$&#123;Date.now()&#125;`;</span></span><br><span class="line"><span class="undefined">        a.href = url;</span></span><br><span class="line"><span class="undefined">        a.target = target || '_target';</span></span><br><span class="line"><span class="undefined">        a.download = '';</span></span><br><span class="line"><span class="undefined">        const body = document.getElementsByTagName('body')[0];</span></span><br><span class="line"><span class="undefined">        body.appendChild(a);</span></span><br><span class="line"><span class="undefined">        a.click();</span></span><br><span class="line"><span class="undefined">        body.removeChild(a);</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    function downloadAfterAsync() &#123;</span></span><br><span class="line"><span class="undefined">        const http = new XMLHttpRequest();</span></span><br><span class="line"><span class="undefined">        http.open('GET','/xhr/get/url.json');</span></span><br><span class="line"><span class="undefined">        http.send();</span></span><br><span class="line"><span class="undefined">        http.onreadystatechange = () =&gt; &#123;</span></span><br><span class="line"><span class="undefined">            if(http.readyState === 4 &amp;&amp; http.status === 200) &#123;</span></span><br><span class="line"><span class="undefined">                console.log(http.responseText);</span></span><br><span class="line"><span class="undefined">                const url = http.responseText;</span></span><br><span class="line"><span class="undefined">                // createAEle(url); // 有些浏览器，动态创建表单也会拦截</span></span><br><span class="line"><span class="undefined">                // windowOpen(url); // 异步回调里调用，浏览器会拦截</span></span><br><span class="line"><span class="undefined">                formDownload(url); // 不拦截</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    function downloadAfterAjax() &#123;</span></span><br><span class="line"><span class="undefined">        $.ajax(&#123;</span></span><br><span class="line"><span class="undefined">            method: 'GET',</span></span><br><span class="line"><span class="undefined">            url: '/xhr/get/url.json',</span></span><br><span class="line"><span class="undefined">            async: false // 将异步改为同步，浏览器不拦截</span></span><br><span class="line"><span class="undefined">        &#125;).done(url =&gt; &#123;</span></span><br><span class="line"><span class="undefined">            windowOpen(url);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function formDownload(url, params) &#123;// 可以使用post方法，携带大对象参数</span></span><br><span class="line"><span class="undefined">        const body = document.getElementsByTagName('body')[0];</span></span><br><span class="line"><span class="undefined">        const oldIframe = document.getElementById('perfectIframe');</span></span><br><span class="line"><span class="undefined">        const oldForm = document.getElementById('perfectForm');</span></span><br><span class="line"><span class="undefined">        const oldInput = document.getElementById('perfectInput');</span></span><br><span class="line"><span class="undefined">        if (oldIframe &amp;&amp; oldForm &amp;&amp; oldInput) &#123;</span></span><br><span class="line"><span class="undefined">            oldForm.setAttribute('action', url);</span></span><br><span class="line"><span class="undefined">            oldInput.setAttribute('value', JSON.stringify(params));</span></span><br><span class="line"><span class="undefined">            document.forms['perfectForm'].submit();</span></span><br><span class="line"><span class="undefined">        &#125; else &#123;</span></span><br><span class="line"><span class="undefined">            const iframe = document.createElement('iframe');</span></span><br><span class="line"><span class="undefined">            iframe.setAttribute('name', 'form_target');</span></span><br><span class="line"><span class="undefined">            iframe.setAttribute('id', 'perfectIframe');</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            const form = document.createElement('form');</span></span><br><span class="line"><span class="undefined">            form.setAttribute('id', 'perfectForm');</span></span><br><span class="line"><span class="undefined">            form.setAttribute('name', 'perfectForm');</span></span><br><span class="line"><span class="undefined">            form.setAttribute('method', 'post');</span></span><br><span class="line"><span class="undefined">            form.setAttribute('action', url);</span></span><br><span class="line"><span class="undefined">            form.setAttribute('target', 'form_target');</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            const hiddenField = document.createElement('input');</span></span><br><span class="line"><span class="undefined">            hiddenField.setAttribute('id', 'perfectInput');</span></span><br><span class="line"><span class="undefined">            hiddenField.setAttribute('type', 'hidden');</span></span><br><span class="line"><span class="undefined">            hiddenField.setAttribute('name', 'value');</span></span><br><span class="line"><span class="undefined">            hiddenField.setAttribute('value', JSON.stringify(params));</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            form.appendChild(hiddenField);</span></span><br><span class="line"><span class="undefined">            body.appendChild(form);</span></span><br><span class="line"><span class="undefined">            body.appendChild(iframe);</span></span><br><span class="line"><span class="undefined">            form.submit();</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>server：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> fse = <span class="built_in">require</span>(<span class="string">'fse'</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">static</span> = <span class="built_in">require</span>(<span class="string">'koa-static'</span>);</span><br><span class="line"><span class="keyword">const</span> opn = <span class="built_in">require</span>(<span class="string">'opn'</span>);</span><br><span class="line"><span class="keyword">const</span> Router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'koa-bodyparser'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa();</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> Router();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> returnFile = <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(ctx.request.body);</span><br><span class="line">    <span class="keyword">let</span> filePath = <span class="built_in">decodeURI</span>(ctx.path.replace(<span class="string">'/xhr/'</span>, <span class="string">''</span>));</span><br><span class="line">    <span class="keyword">if</span> (fse.existsSync(path.resolve(filePath))) &#123;</span><br><span class="line">        ctx.set(<span class="string">'Content-disposition'</span>, <span class="string">'attachment; filename=a.pptx'</span>);</span><br><span class="line">        ctx.set(<span class="string">'Content-Type'</span>, <span class="string">'application/x-ppt; charset=UTF-8'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(path.resolve(filePath))</span><br><span class="line">        ctx.body = fse.readFileSync(path.resolve(filePath), <span class="string">'utf-8'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'error'</span>);</span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置静态资源</span></span><br><span class="line">app.use(<span class="keyword">static</span>(</span><br><span class="line">    path.join(__dirname, <span class="string">'./src'</span>)</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用ctx.body解析中间件</span></span><br><span class="line">app.use(bodyParser())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求</span></span><br><span class="line">router.get(<span class="string">'/xhr/doc/:name'</span>, returnFile)</span><br><span class="line">router.post(<span class="string">'/xhr/doc/:name'</span>, returnFile)</span><br><span class="line"><span class="comment">// 请求</span></span><br><span class="line">router.get(<span class="string">'/xhr/get/:name'</span>, <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    ctx.body = <span class="string">'/xhr/doc/test.pptx'</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app</span><br><span class="line">    .use(router.routes())</span><br><span class="line">    .use(router.allowedMethods());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">opn(<span class="string">'http://localhost:3001/'</span>);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3001</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>rx和promise一个小例子</title>
      <link href="/blog/2018/12/07/rx%E5%92%8Cpromise%E4%B8%80%E4%B8%AA%E5%B0%8F%E4%BE%8B%E5%AD%90/"/>
      <url>/blog/2018/12/07/rx%E5%92%8Cpromise%E4%B8%80%E4%B8%AA%E5%B0%8F%E4%BE%8B%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h1 id="rx和promise一个小例子"><a href="#rx和promise一个小例子" class="headerlink" title="rx和promise一个小例子"></a>rx和promise一个小例子</h1><ul><li>系统中多处需要用到的接口</li><li>例如用户信息、店铺列表</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rx </tag>
            
            <tag> promise </tag>
            
            <tag> angular </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
